const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkMigrationStatus() {
  try {
    console.log('๐ ูุญุต ุญุงูุฉ ุฃุฑูุงู ุงูุฑุญูุงุช ูุงูููุงุชูุฑ...\n')

    // ูุญุต ุฃุฑูุงู ุงูุฑุญูุงุช
    const oldTripsCount = await prisma.trip.count({
      where: {
        OR: [
          { tripNumber: { startsWith: "TWB:" } },
          { tripNumber: { startsWith: "TRP-" } },
          { tripNumber: { startsWith: "INV-" } }
        ]
      }
    })

    const newTripsCount = await prisma.trip.count({
      where: {
        tripNumber: { startsWith: "PRO-" }
      }
    })

    const sampleOldTrips = await prisma.trip.findMany({
      where: {
        OR: [
          { tripNumber: { startsWith: "TWB:" } },
          { tripNumber: { startsWith: "TRP-" } },
          { tripNumber: { startsWith: "INV-" } }
        ]
      },
      select: {
        tripNumber: true,
        createdAt: true
      },
      take: 5,
      orderBy: { createdAt: 'desc' }
    })

    console.log('๐ ุฃุฑูุงู ุงูุฑุญูุงุช:')
    console.log(`   - ุงูุชูุณูู ุงููุฏูู: ${oldTripsCount}`)
    console.log(`   - ุงูุชูุณูู ุงูุฌุฏูุฏ: ${newTripsCount}`)
    console.log(`   - ุฅุฌูุงูู: ${oldTripsCount + newTripsCount}`)
    
    if (sampleOldTrips.length > 0) {
      console.log('\n๐ ุนููุฉ ูู ุงูุฑุญูุงุช ุจุงูุชูุณูู ุงููุฏูู:')
      sampleOldTrips.forEach(trip => {
        console.log(`   - ${trip.tripNumber} (${trip.createdAt.toLocaleDateString()})`)
      })
    }

    // ูุญุต ุงูููุงุชูุฑ ุงูุนุงุฏูุฉ
    const oldInvoicesCount = await prisma.invoice.count({
      where: { invoiceNumber: { startsWith: "INV-" } }
    })

    const newInvoicesCount = await prisma.invoice.count({
      where: { invoiceNumber: { startsWith: "PRO-INV-" } }
    })

    const sampleOldInvoices = await prisma.invoice.findMany({
      where: { invoiceNumber: { startsWith: "INV-" } },
      select: { invoiceNumber: true, createdAt: true },
      take: 3,
      orderBy: { createdAt: 'desc' }
    })

    console.log('\n๐ฐ ุงูููุงุชูุฑ ุงูุนุงุฏูุฉ:')
    console.log(`   - ุงูุชูุณูู ุงููุฏูู: ${oldInvoicesCount}`)
    console.log(`   - ุงูุชูุณูู ุงูุฌุฏูุฏ: ${newInvoicesCount}`)
    
    if (sampleOldInvoices.length > 0) {
      console.log('\n๐ ุนููุฉ ูู ุงูููุงุชูุฑ ุงูุนุงุฏูุฉ ุจุงูุชูุณูู ุงููุฏูู:')
      sampleOldInvoices.forEach(invoice => {
        console.log(`   - ${invoice.invoiceNumber} (${invoice.createdAt.toLocaleDateString()})`)
      })
    }

    // ูุญุต ููุงุชูุฑ ุงูุชุฎููุต ุงูุฌูุฑูู
    const oldClearanceCount = await prisma.customsClearanceInvoice.count({
      where: { invoiceNumber: { startsWith: "CI-" } }
    })

    const newClearanceCount = await prisma.customsClearanceInvoice.count({
      where: { invoiceNumber: { startsWith: "PRO-CLR-" } }
    })

    const sampleOldClearance = await prisma.customsClearanceInvoice.findMany({
      where: { invoiceNumber: { startsWith: "CI-" } },
      select: { invoiceNumber: true, createdAt: true },
      take: 3,
      orderBy: { createdAt: 'desc' }
    })

    console.log('\n๐๏ธ ููุงุชูุฑ ุงูุชุฎููุต ุงูุฌูุฑูู:')
    console.log(`   - ุงูุชูุณูู ุงููุฏูู: ${oldClearanceCount}`)
    console.log(`   - ุงูุชูุณูู ุงูุฌุฏูุฏ: ${newClearanceCount}`)
    
    if (sampleOldClearance.length > 0) {
      console.log('\n๐ ุนููุฉ ูู ููุงุชูุฑ ุงูุชุฎููุต ุจุงูุชูุณูู ุงููุฏูู:')
      sampleOldClearance.forEach(invoice => {
        console.log(`   - ${invoice.invoiceNumber} (${invoice.createdAt.toLocaleDateString()})`)
      })
    }

    const totalOldRecords = oldTripsCount + oldInvoicesCount + oldClearanceCount
    const totalNewRecords = newTripsCount + newInvoicesCount + newClearanceCount

    console.log('\n๐ ุงูููุฎุต ุงูุนุงู:')
    console.log(`   - ุฅุฌูุงูู ุงูุณุฌูุงุช ุจุงูุชูุณูู ุงููุฏูู: ${totalOldRecords}`)
    console.log(`   - ุฅุฌูุงูู ุงูุณุฌูุงุช ุจุงูุชูุณูู ุงูุฌุฏูุฏ: ${totalNewRecords}`)
    console.log(`   - ูุญุชุงุฌ ุชุฑุญูู: ${totalOldRecords > 0 ? 'ูุนู โ' : 'ูุง โ'}`)

    if (totalOldRecords > 0) {
      console.log('\n๐ ุฌุงูุฒ ูุชุดุบูู ุณูุฑููพุชุงุช ุงูุชุฑุญูู!')
    } else {
      console.log('\nโ ุฌููุน ุงูุฃุฑูุงู ูุญุฏุซุฉ ุจุงููุนู!')
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ูุญุต ุงูุจูุงูุงุช:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkMigrationStatus()
