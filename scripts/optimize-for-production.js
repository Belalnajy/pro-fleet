const { PrismaClient } = require('@prisma/client')
const fs = require('fs')
const path = require('path')

const prisma = new PrismaClient()

async function optimizeForProduction() {
  console.log('๐ ุชุญุณูู ุงููุธุงู ููุฅูุชุงุฌ...\n')

  let totalSaved = 0

  try {
    // 1. ุชูุธูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    console.log('๐๏ธ ุชูุธูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...')
    
    // ุญุฐู tracking logs ุฃูุฏู ูู 7 ุฃูุงู
    const sevenDaysAgo = new Date()
    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7)
    
    const deletedTracking = await prisma.trackingLog.deleteMany({
      where: { timestamp: { lt: sevenDaysAgo } }
    })
    
    // ุญุฐู ุงูุฅุดุนุงุฑุงุช ุงูููุฑูุกุฉ ุฃูุฏู ูู 3 ุฃูุงู
    const threeDaysAgo = new Date()
    threeDaysAgo.setDate(threeDaysAgo.getDate() - 3)
    
    const deletedNotifications = await prisma.notification.deleteMany({
      where: {
        isRead: true,
        createdAt: { lt: threeDaysAgo }
      }
    })
    
    console.log(`โ ุญุฐู ${deletedTracking.count} ุณุฌู ุชุชุจุน ูุฏูู`)
    console.log(`โ ุญุฐู ${deletedNotifications.count} ุฅุดุนุงุฑ ููุฑูุก`)
    
    // 2. ุชุญุณูู ุงูููุงุฑุณ (ุฅุฐุง ูุฒู ุงูุฃูุฑ)
    console.log('\n๐ ุชุญุณูู ุงูููุงุฑุณ...')
    // ูููู ุฅุถุงูุฉ ุงุณุชุนูุงูุงุช ุชุญุณูู ุงูููุงุฑุณ ููุง
    
    // 3. ุฅุญุตุงุฆูุงุช ููุงุฆูุฉ
    const currentStats = {
      trackingLogs: await prisma.trackingLog.count(),
      notifications: await prisma.notification.count(),
      trips: await prisma.trip.count(),
      invoices: await prisma.invoice.count(),
      users: await prisma.user.count()
    }
    
    console.log('\n๐ ุฅุญุตุงุฆูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจุนุฏ ุงูุชุญุณูู:')
    console.log(`๐ Tracking Logs: ${currentStats.trackingLogs}`)
    console.log(`๐ ุงูุฅุดุนุงุฑุงุช: ${currentStats.notifications}`)
    console.log(`๐ ุงูุฑุญูุงุช: ${currentStats.trips}`)
    console.log(`๐ ุงูููุงุชูุฑ: ${currentStats.invoices}`)
    console.log(`๐ฅ ุงููุณุชุฎุฏููู: ${currentStats.users}`)
    
    // 4. ุชูุธูู ุงููููุงุช ุงููุคูุชุฉ
    console.log('\n๐๏ธ ุชูุธูู ุงููููุงุช ุงููุคูุชุฉ...')
    
    const tempDirs = ['.next', 'node_modules/.cache', '.vercel']
    let cleanedFiles = 0
    
    for (const dir of tempDirs) {
      if (fs.existsSync(dir)) {
        try {
          const stats = await fs.promises.stat(dir)
          if (stats.isDirectory()) {
            // ูุง ูุญุฐู ูุฐู ุงููุฌูุฏุงุช ูุฃููุง ูููุฉุ ููุท ูุนุฏ ุงููููุงุช
            console.log(`๐ ${dir} ููุฌูุฏ`)
          }
        } catch (error) {
          // ุชุฌุงูู ุงูุฃุฎุทุงุก
        }
      }
    }
    
    // 5. ูุตุงุฆุญ ููุชุญุณูู
    console.log('\n๐ก ูุตุงุฆุญ ููุชุญุณูู:')
    console.log('1. ุดุบู ูุฐุง ุงูุณูุฑูุจุช ูู ุฃุณุจูุน')
    console.log('2. ุฑุงูุจ ุญุฌู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจุงูุชุธุงู')
    console.log('3. ุงุณุชุฎุฏู CDN ูููููุงุช ุงูุซูููุฉ ูู ุงูุฅูุชุงุฌ')
    console.log('4. ูุนู ุถุบุท ุงูุจูุงูุงุช ูู ุงูุฅูุชุงุฌ')
    console.log('5. ุงุณุชุฎุฏู ูุงุนุฏุฉ ุจูุงูุงุช ุฃูุจุฑ ููุฅูุชุงุฌ ุงูููุงุฆู')
    
    // 6. ุฅุนุฏุงุฏุงุช ุงูุฅูุชุงุฌ ุงูููุชุฑุญุฉ
    console.log('\nโ๏ธ ุฅุนุฏุงุฏุงุช ุงูุฅูุชุงุฌ ุงูููุชุฑุญุฉ:')
    console.log('DATABASE_URL=postgresql://user:pass@host:5432/profleet_prod')
    console.log('NEXTAUTH_SECRET=your-super-secret-key-here')
    console.log('CLOUDINARY_URL=cloudinary://key:secret@cloud')
    console.log('NODE_ENV=production')
    
    console.log('\n๐ ุชู ุชุญุณูู ุงููุธุงู ููุฅูุชุงุฌ ุจูุฌุงุญ!')
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุชุญุณูู:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// ุชุดุบูู ุงูุชุญุณูู
optimizeForProduction()
